---
###############################################################################
# Dropbear Remote Unlock Configuration
###############################################################################

# Dropbear private/public keys for remote root FS crypto unlock.
# ssh-keygen -b 4096 -t rsa -f ~/.ssh/dropbear
# Use vault. This key should use a key password.
dropbear_private_key: ''
dropbear_public_key:  ''

# Dropbear host identification key. This is a special format, not a standard
# SSH keypair. Generate a host key, encrypt, store in ansible outside of
# {host,group}_vars:
#
#   dropbearkey -t rsa -s 4096 -f dropbear_rsa_host_key
#   ansible-vault encrypt special/{HOST}_rsa_host_key
#
# NOTE: Dropbear host keys are binary files and cannot be stored encrypted in
#       the {host,group}_vars directory. Ansible will try to automtically
#       decrypt this file and fail due to UTF-8 encoding issues. Storing within
#       ansible but outside of {host,group}_vars to prevent decryption until
#       the binary file is copied, wherein the decryption happens correctly.
#
# ERROR! 'utf-8' codec can't encode characters in position 23-24: surrogates
#        not allowed
dropbear_rsa_host_key_file: ''

# Command line options to pass to dropbear.
# -s -g - disable user, root password auth
# -j -k - disable local, remote port forwarding
# -m disable MOTD
# -p 22 listen on all interfaces, port 22
# -T 1 one authentication attempt
dropbear_options: '-s -g -j -k -m -p 22 -T 1'

# On local (non-NFS) mounts, interfaces matching this pattern are
# brought down before exiting the ramdisk to avoid dirty network
# configuration in the normal kernel.
# The special value 'none' keeps all interfaces up and preserves routing
# tables and addresses.
dropbear_ifdown: '*'

# On local (non-NFS) mounts, the network stack and dropbear are started
# asynchronously at init-premount stage.  This value specifies the
# maximum number of seconds to wait (while the network/dropbear are
# being configured) at init-bottom stage before terminating dropbear and
# bringing the network down.
# If the timeout is too short, and if the boot process is not blocking
# on user input supplied via SSHd (ie no remote unlocking), then the
# initrd might pivot to init(1) too early, thereby causing a race
# condition between network configuration from initramfs vs from the
# normal system.
dropbear_shutdown_timeout:  '60'
